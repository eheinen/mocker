// ------------------MOCKER--------------------
// DO NOT EDIT THIS FILE, CODE AUTO-GENERATED
// ------------------MOCKER--------------------

package mocks

import (
	"testing"

	"github.com/stretchr/testify/mock"
)

// MockGetPerson
// *person.Person,  error
func MockGetPerson(mocking *mock.Mock, expectedReturns ...interface{}) *mock.Call {
	return mocking.On("GetPerson").Return(expectedReturns...)
}

// AssertGetPerson
// No argument and return expected
func AssertGetPerson(t *testing.T, mocking *mock.Mock, times int, expectedReturns ...interface{}) {
	if times != 0 {
		mocking.AssertCalled(t, "GetPerson", expectedReturns...)
	}

	mocking.AssertNumberOfCalls(t, "GetPerson", times)
}

// MockCreatePerson
// (person person.Person, ctx context.Context)
// error
func MockCreatePerson(mocking *mock.Mock, expectedReturns ...interface{}) *mock.Call {
	return mocking.On("CreatePerson",
		mock.AnythingOfType("person.Person"),
		mock.Anything,
	).Return(expectedReturns...)
}

// AssertCreatePerson
// (person person.Person, ctx context.Context)
func AssertCreatePerson(t *testing.T, mocking *mock.Mock, times int, expectedReturns ...interface{}) {
	if times != 0 {
		mocking.AssertCalled(t, "CreatePerson", expectedReturns...)
	}

	mocking.AssertNumberOfCalls(t, "CreatePerson", times)
}
